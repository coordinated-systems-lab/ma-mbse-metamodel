schema {
    query: Query
}
type Query {
    missionAwareSystemModel: MissionAwareSystemModel
}
type MissionAwareSystemModel {
    project: Project

    # requirements
    requirements: [Requirement]

    # architecture
    components: [Component]
    interfaces: [Interface]
    links: [Link]

    # behavior
    functions: [Function]
    contexts: [Context]
    controlActions: [ControlAction]
    feedback: [Feedback]
    resources: [Resource]

    # STPA / MA
    losses: [Loss]
    hazards: [Hazard]
    unsafeActions: [UnsafeAction]
    lossScenarios: [LossScenario]
    resilientModes: [ResilientMode]

    # test / validation
    verificationRequirements: [VerificationRequirement]
    testActivities: [TestActivity]
}
type Project {
    id: ID!
    name: String!
    description: String
    version: String
}
type Parameter {
    name: String!
    description: String
    type: String
    objective: String
    threshold: String
    design: String
    observed: String
    units: String
}
type Component {
    identity: ComponentID!
    attributes: ComponentATTR
    parameters: [Parameter]
    relations: ComponentREL
}
type ComponentID {
    id: ID!
    name: String!
    number: String!
}
type ComponentATTR {
    description: String
    type: ComponentType!
}
enum ComponentType {
    Context
    External_System
    Human
    HW_Element
    Sentinel
    Subsystem
    System
    SW_Eelement
    Threat_Simulator
}
type ComponentREL {
    specifiedBy: [SpecifiedByTarget]
    builtFrom: [BuiltFromTarget]
    builtIn: [BuiltInTarget]
    connectedTo: [ConnectedToTarget]
    joinedTo: [JoinedToTarget]
    performs: [PerformsTarget]
}
type SpecifiedByTarget {
    requirementTarget: RequirementID
}
type BuiltFromTarget {
    componentTarget: ComponentID
}
type BuiltInTarget {
    componentTarget: ComponentID
}
type ConnectedToTarget {
    linkTarget: LinkID
}
type JoinedToTarget {
    interfaceTarget: InterfaceID
}
type PerformsTarget {
    functionTarget: FunctionID
}
type Interface {
    identity: InterfaceID!
    attributes: InterfaceATTR
    parameters: [Parameter]
    relations: InterfaceREL
}